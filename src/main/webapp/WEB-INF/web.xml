<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_9" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <!-- 测试ajax请求的servlet -->
    <servlet>
        <servlet-name>ajaxServlet</servlet-name>
        <servlet-class>com.univ.servlet.ajax.AjaxServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>ajaxServlet</servlet-name>
        <url-pattern>/get_text</url-pattern>
    </servlet-mapping>

    <!-- 最普通的servlet测试 -->
    <servlet>
        <servlet-name>helloServlet</servlet-name>
        <servlet-class>com.univ.servlet.HelloServlet</servlet-class>
        <!-- 给servlet配置初始化参数 -->
        <init-param>
            <param-name>name</param-name>
            <param-value>helloServlet</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>helloServlet</servlet-name>
        <url-pattern>/helloServlet</url-pattern>
    </servlet-mapping>

    <!--utf8编码过滤器,用以解决post请求乱码问题-->
    <filter>
        <filter-name>characteEncodingFilter</filter-name>
        <filter-class>com.univ.filter.CharacterEncodingFilter</filter-class>
        <!-- 给filter配置初始化参数,注意,初始化参数是配给FilterConfig的 -->
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characteEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- 最普通的filter测试 -->
    <filter>
        <filter-name>helloFilter</filter-name>
        <filter-class>com.univ.filter.HelloFilter</filter-class>
        <!-- 给filter配置初始化参数,注意,初始化参数是配给FilterConfig的 -->
        <init-param>
            <param-name>name</param-name>
            <param-value>univ</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>helloFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--context-param是配置给ServletContext使用的，整个web应用共享(只有一个ServletContext对象，所以所有listener都可获取到这里配置的值)-->
    <context-param>
        <param-name>name</param-name>
        <param-value>univ</param-value>
    </context-param>

    <!-- listeners -->
    <!--
        1. 监听器也能配置参数,只是不像servlet和filter一样是配置在相应的标签下,而是直接获取context-param的参数
        2. 会先初始化MyServletContextListener
    -->
    <listener>
        <listener-class>com.univ.listener.MyServletRequestListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.univ.listener.MyServletRequestAttributeListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.univ.listener.MyServletContextListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.univ.listener.MyServletContextAttributeListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.univ.listener.MyHttpSessionListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.univ.listener.MyHttpSessionAttributeListener</listener-class>
    </listener>

    <listener>
        <listener-class>com.univ.listener.MyHttpSessionBindingListener</listener-class>
    </listener>

    <welcome-file-list>
        <!--
        这里文件的路径不是基于webapp，而是基于具体的请求
        如请求http://localhost:8080，则为webapp下的index.jsp页面；
        如请求http://localhost:8080/welcome_file，则为webapp下的welcome_file/hello.html页面；
        -->
        <welcome-file>index.html</welcome-file>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>hello.html</welcome-file>
    </welcome-file-list>
</web-app>
